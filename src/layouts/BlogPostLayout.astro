---
import {Image} from 'astro:assets';
import type { ImageMetadata } from 'astro';
import {getImage} from 'astro:assets';
import Layout from './Layout.astro';
import RelatedPostsBox from '../components/RelatedPostsBox.astro';
import ViewCounter from '../components/ViewCounter.astro';
import ViewCounterLoading from '../components/ViewCounterLoading.astro';
import PostComments from '../components/PostComments.astro';
import { imageMetadata } from 'astro/assets/utils';
const { frontmatter } = Astro.props;
const hasImage = frontmatter.image ? true : false;

const images = import.meta.glob<{default: ImageMetadata}>('/src/images/*.{jpeg,jpg,png,gif}');
const slug = Astro.params.slug;
---

<Layout title={frontmatter.title}>
  <div class="sticky top-0 z-10 bg-base-200 h-2 flex">
    <progress id="reading-progress-bar" class="progress progress-primary w-full bg-base-200" value="0" max="100"></progress>
    </div>
  <div class="flex flex-shrink mx-4">
    {
      hasImage ? (
        <div class="max-w-[1000px] mx-auto">
        <Image
          class="mx-auto py-8"
          src={images[frontmatter.image.url]()}
          alt={frontmatter.image.alt}
          inferSize
        />
        </div>
      ) : (
        ''
      )
    }
  </div>

  <div class="m-4 py-4 px-8 flex flex-col gap-4 md:max-w-4xl mx-auto">
    <h1 class="font-slab font-bold text-2xl sm:text-4xl">{frontmatter.title}</h1>
    <ViewCounter server:defer slug={slug}>
      <ViewCounterLoading slot="fallback"></ViewCounterLoading>
    </ViewCounter>
    <div class="italic text-xl">{frontmatter.description}</div>
    <div class="text-sm">{frontmatter.pubDate.toDateString()}</div>
    <div class="flex gap-2 items-center justify-start">
      {frontmatter.tags.map((tag) => (
      <a href=`/blog/tags/${tag}`>
        <p class="transition border-dotted border-2 border-primary hover:bg-primary rounded-full p-1 px-2 font-semibold hover:text-white w-max hover:underline">{tag}</p>
      </a>
    ))}
    </div>
  </div>



  <div
    class="mx-auto px-8 mb-32 max-w-4xl text-lg prose prose-h1:font-bold prose-h2:text-xl prose-h1:text-2xl md:prose-h1:text-4xl md:prose-h2:text-3xl prose-h3:text-lg md:prose-h3:text-xl leading-8 font-sans rounded-md"
  >

    <slot />
    <div class="flex justify-end mb-8"><a class="text-primary-content hover:underline font-semibold" href="/blog/">Return to blog</a></div>
    <RelatedPostsBox frontmatter={frontmatter}></RelatedPostsBox>
    <PostComments></PostComments>
  </div>

  <script>
  // Function to update the progress bar
  function updateProgressBar() {
    const progressBar = document.getElementById('reading-progress-bar');
    const scrollTop = window.scrollY; // Current vertical scroll position
    const documentHeight = document.documentElement.scrollHeight; // Total height of the document
    const windowHeight = window.innerHeight; // Height of the visible window

    // Calculate the total scrollable height
    const scrollableHeight = documentHeight - windowHeight;

    // Calculate the scroll progress in percentage
    const scrollProgress = (scrollTop / scrollableHeight) * 100;

    // Update the value of the progress bar
    progressBar.value = scrollProgress;
  }

  // Attach the updateProgressBar function to the scroll event
  window.addEventListener('scroll', updateProgressBar);
</script>
  
</Layout>
