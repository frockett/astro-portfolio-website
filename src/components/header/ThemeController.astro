---

---

<label class="cursor-pointer gap-2 hidden sm:flex">
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="20"
    height="20"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
  >
    <circle cx="12" cy="12" r="5"></circle>
    <path
      d="M12 1v2M12 21v2M4.2 4.2l1.4 1.4M18.4 18.4l1.4 1.4M1 12h2M21 12h2M4.2 19.8l1.4-1.4M18.4 5.6l1.4-1.4"
    ></path>
  </svg>
  <input
    id="themeToggle"
    type="checkbox"
    value="darkCustom"
    class="toggle theme-controller"
  />
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="20"
    height="20"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
  >
    <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
  </svg>
</label>

<script>
  const themeToggle = document.getElementById('themeToggle');
  const preferredTheme = checkForPreference();
  let storedTheme = localStorage.getItem('theme');

  document.addEventListener('DOMContentLoaded', () => {
    if (!storedTheme) {
      storedTheme = preferredTheme;
    }
    syncThemeToggle(storedTheme, getToggleState());
    updatePreference(getToggleState());
  });

  function getToggleState() {
    return themeToggle.checked;
  }

  themeToggle.addEventListener('click', (e) => {
    updatePreference(e.target.checked);
  });

  function syncThemeToggle(storedTheme, isChecked) {
    if (
      (storedTheme === 'light' && isChecked) ||
      (storedTheme === 'dark' && !isChecked)
    ) {
      themeToggle.checked = !isChecked;
    }
  }

  function updatePreference(isChecked) {
    isChecked === true
      ? localStorage.setItem('theme', 'dark')
      : localStorage.setItem('theme', 'light');
  }

  function checkForPreference() {
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return 'dark';
    } else {
      return 'light';
    }
  }
</script>
